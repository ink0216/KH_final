<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kh.em.albaya.hire.model.mapper.HireMapper">
<!-- 
	<insert id="boardInsert" useGeneratedKeys="true" parameterType="Board">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
		SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO "BOARD" 
		VALUES(#{boardNo}, 
				#{boardTitle},
				#{boardContent},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT,
				#{boardCode},
				#{memberNo}
				)
	</insert>
 -->
 
 	<!-- typeName에 따른 typeNo 조회 -->
	<select id="hireTypeNo">
		SELECT TYPE_NO FROM "WORK_TYPE"
		WHERE TYPE_NAME = #{typeName}
	</select>
	
	
	<select id="selectListCount">
		SELECT COUNT(*) FROM "HIRE"
		WHERE HIRE_STATUS = 0
		AND HIRE_DEL_FL='N'
		AND HIRE_END >(SELECT SYSDATE FROM "DUAL")
	</select>
	
	<!-- 기업명, 공고제목, 근무시간, 근무지역, 급여-->
	<select id="selectHireList">	
			SELECT B.SHOP_NAME, A.HIRE_TITLE, A.WORK_START,A.HIRE_NO,
		A.WORK_END, E.DOSI_NAME, D.SIGUNGU_NAME, F.PAY_NAME, A.PAY_INPUT


		FROM "HIRE" A
		LEFT JOIN "SHOP" B ON (B.SHOP_NO=A.SHOP_NO)
		LEFT JOIN "DONG" C ON (C.DONG_NO=A.DONG_NO)
		LEFT JOIN "SIGUNGU" D ON (D.SIGUNGU_NO=C.SIGUNGU_NO)
		LEFT JOIN "DOSI" E ON (E.DOSI_NO=D.DOSI_NO)
		LEFT JOIN "PAY_TYPE" F ON (F.PAY_NO=A.PAY_NO)
		WHERE HIRE_STATUS = 0
		AND HIRE_END >(SELECT SYSDATE FROM "DUAL")
		AND HIRE_DEL_FL='N'
		ORDER BY HIRE_NO DESC
	</select>
	
	<!-- INSERT -->
	<insert id="insertWrite" useGeneratedKeys="true" parameterType="Hire">
		<selectKey order="BEFORE" resultType="_int" keyProperty="hireNo">
		SELECT SEQ_HIRE_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO "HIRE" 
		VALUES(
		#{hireNo},#{shopNo},#{typeNo},
		#{payNo},#{hireTitle},#{hireContent},
		DEFAULT,TO_DATE(#{hireEnd}, 'YYYY-MM-DD'),#{hireCount},
		#{hireTerm},#{hireGender},
		<if test='hireStatus == null'>
		DEFAULT
		</if>
		<if test='hireStatus != null'>
		#{hireStatus}
		</if>
		,
		#{workDay},#{payInput},#{dongNo},
		#{addressDetail},#{workStart},#{workEnd},#{shopOwner}
		,#{shopEmail},#{shopTel},#{shopName},#{address},DEFAULT
				)
	</insert>
	
	<!-- 시군구동이 모두 일치하는 동 번호 조회 -->
	<select id="hireDongNo">
	       SELECT DONG_NO
       FROM "DONG"
       JOIN "SIGUNGU" USING (SIGUNGU_NO)
       JOIN "DOSI" USING (DOSI_NO)
       WHERE REPLACE(DONG_NAME, ' ', '') LIKE '%' || REPLACE(#{dongName}, ' ', '') || '%'
       AND REPLACE(SIGUNGU_NAME, ' ', '') LIKE '%' || REPLACE(#{sigunguName}, ' ', '') || '%'
       AND REPLACE(DOSI_NAME, ' ', '') LIKE '%' || REPLACE(#{dosiName}, ' ', '') || '%'
	</select>
	
	
	  <!-- 
	  <choose>
       <when test='ISEXCEL != null and ISEXCEL.equals("Y")'>       
      </when>
      <otherwise>			
      </otherwise>
</choose>

<if test='ITEM_CD != null and !ITEM_CD.equals("")'>   
</if> 

<![CDATA[ 
		CASE 이 네 가지 중 하나를 선택해서 한 컬럼이 나온다
			WHEN SYSDATE-BOARD_WRITE_DATE < 1/24/60 
			THEN FLOOR((SYSDATE-BOARD_WRITE_DATE)*24*60*60)||'초 전'
			
			WHEN SYSDATE-BOARD_WRITE_DATE < 1 
			THEN FLOOR((SYSDATE-BOARD_WRITE_DATE)*24)||'시간 전'
			
			ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD') 아무 케이스에도 안 들어가는 경우
		END BOARD_WRITE_DATE 별칭
	]]>
	   -->
	   <!-- 공고 번호, 공고제목, 공고내용, 업직종 이름, 모집인원, 
	모집종료일(2024-03-23), 근무기간(몇개월), 근무요일(월,수,금)
	근무 시작 시간, 근무 종료 시간, 급여종류명, 급여양, 모집성별,
	근무지 시군구, 근무지 상세주소, 담당자명, 담당자연락처,담당자이메일,
	
	  -->
	<!-- 공고 상세 조회 -->
	<select id="detailHire">
	SELECT HIRE_NO, HIRE_TITLE, HIRE_CONTENT, TYPE_NAME, HIRE_COUNT,SHOP_NO,A.SHOP_NO,
	HIRE_DEL_FL,
	TO_CHAR(HIRE_END, 'YYYY-MM-DD') HIRE_END,
	DECODE(HIRE_TERM, 1, '하루', 7, '일주일', 
	3, '1~3개월', 6, '3~6개월', 365, '1년 이상') HIRE_TERM2,
	WORK_DAY,
	WORK_START, WORK_END, PAY_NAME, PAY_INPUT , 
	DECODE(HIRE_GENDER, 'A', '성별무관', 'F', '여성', 'M', '남성') HIRE_GENDER,
    CASE 
    	WHEN LENGTH(SIGUNGU_NAME)>=5 THEN DOSI_NAME||' '||SUBSTR(SIGUNGU_NAME,1,3)||' '||SUBSTR(SIGUNGU_NAME,4)||' '||DONG_NAME
    	ELSE DOSI_NAME||' '||SIGUNGU_NAME||' '||DONG_NAME 
    END
    ADDRESS,
	ADDRESS_DETAIL, SHOP_OWNER, SHOP_TEL, SHOP_EMAIL, ROAD_ADDRESS
	FROM "HIRE" A
	LEFT JOIN "WORK_TYPE" B ON (B.TYPE_NO = A.TYPE_NO)
	LEFT JOIN PAY_TYPE C ON (C.PAY_NO=A.PAY_NO)
	LEFT JOIN "DONG" D ON (D.DONG_NO=A.DONG_NO)
	LEFT JOIN "SIGUNGU" E ON (E.SIGUNGU_NO=D.SIGUNGU_NO)
	LEFT JOIN "DOSI" F ON (F.DOSI_NO=E.DOSI_NO)
	WHERE HIRE_NO = #{hireNo}
	</select>
	<!--  
	DECODE(HIRE_TERM, 1, '하루', 7, '일주일', 
	3, '1~3개월', 6, '3~6개월', 365, '1년 이상')
	<if test="HIRE_TERM ==1">
	'하루'
	</if>
	
	DECODE(HIRE_GENDER, 'A', '성별무관', 'F', '여성', 'M', '남성') HIRE_GENDER,
	-->
	
	
	
	
	<!--**************** 지역별 공고 조회하기********************* -->
	<select id="selectDosi">
		SELECT * FROM "DOSI"
		ORDER BY DOSI_NAME
	</select>
	
	<select id="selectSigungu">
		SELECT * 
		FROM "SIGUNGU"
		JOIN "DOSI" USING(DOSI_NO) 
		WHERE DOSI_NAME =#{dosiName}
		ORDER BY SIGUNGU_NAME
	</select>
	
	<select id="selectDong">
		SELECT * 
		FROM "DONG"
		JOIN "SIGUNGU" USING(SIGUNGU_NO) 
		WHERE SIGUNGU_NAME =#{sigunguName}
		ORDER BY DONG_NAME
	</select>
	
	
	<!-- 해당 동 내의 공고 수 찾기 -->
	<select id="dongListCount" parameterType="list">
		SELECT COUNT(*) FROM "HIRE"
		WHERE DONG_NO IN 
		<foreach collection="list" item="item" open="(" close=")" separator=" , ">
			#{item}
		</foreach>
		AND HIRE_DEL_FL='N'
	</select>
	
	<!-- 해당 동 내의 모든 공고 -->
	<select id="sigunguListCount" parameterType="list">
		SELECT COUNT(*)
		FROM "HIRE" A
		JOIN "DONG" B ON (B.DONG_NO=A.DONG_NO)
		JOIN "SIGUNGU" C ON (C.SIGUNGU_NO=B.SIGUNGU_NO)
		WHERE C.SIGUNGU_NO = #{sigunguNo}
		AND HIRE_DEL_FL='N'
	</select>
	
		<!-- 지역별 공고 조회해오기 -->
	<select id="locationHireList">
		SELECT A.SHOP_NAME, HIRE_TITLE, WORK_START,HIRE_NO,
		WORK_END, DOSI_NAME, SIGUNGU_NAME, F.PAY_NAME, PAY_INPUT
		 FROM "HIRE" A
		JOIN "SHOP" B ON (B.SHOP_NO=A.SHOP_NO)
		JOIN "DONG" C ON (C.DONG_NO=A.DONG_NO)
		JOIN "SIGUNGU" D ON (D.SIGUNGU_NO=C.SIGUNGU_NO)
		JOIN "DOSI" E ON (E.DOSI_NO=D.DOSI_NO)
		JOIN "PAY_TYPE" F ON (F.PAY_NO=A.PAY_NO)

		WHERE HIRE_STATUS = 0
		AND A.DONG_NO IN 
		<foreach collection="list" item="item" open="(" close=")" separator=" , ">
			#{item}
		</foreach>
		AND HIRE_DEL_FL='N'
		ORDER BY HIRE_NO DESC
	
	</select>
	
		<!-- 지역별 공고 조회해오기2 -->
	<select id="locationHireList2">
		SELECT A.SHOP_NAME, A.HIRE_TITLE, A.WORK_START,A.HIRE_NO,
				A.WORK_END, E.DOSI_NAME, D.SIGUNGU_NAME, F.PAY_NAME, A.PAY_INPUT
		FROM "HIRE" A
		JOIN "SHOP" B ON (B.SHOP_NO=A.SHOP_NO)
		JOIN "DONG" C ON (C.DONG_NO=A.DONG_NO)
		JOIN "SIGUNGU" D ON (D.SIGUNGU_NO=C.SIGUNGU_NO)
		JOIN "DOSI" E ON (E.DOSI_NO=D.DOSI_NO)
		JOIN "PAY_TYPE" F ON (F.PAY_NO=A.PAY_NO)
		
		WHERE HIRE_STATUS = 0
		AND D.SIGUNGU_NO = #{sigunguNo}
		AND HIRE_DEL_FL='N'
		ORDER BY HIRE_NO DESC
	</select>
	
	
	
	
	
	
	
	
	<!-- ***************업직종별 공고 조회하기******************** -->
	<select id="selectKind">
	SELECT * FROM "WORK_TYPE"
	</select>
	
	<select id="hireInfo" resultType="Hire">
	    SELECT HIRE_NO, HIRE_TITLE, s.SHOP_NAME
	    FROM "HIRE" h
	    JOIN SHOP s ON h.SHOP_NO = s.SHOP_NO
	    WHERE h.HIRE_NO = #{hireNo}
	</select>

	
	<!-- 해당 업직종의 공고 수 찾기 -->
	<select id="kindListCount">
	SELECT COUNT(*) FROM "HIRE"
		WHERE TYPE_NO IN 
		<foreach collection="list" item="item" open="(" close=")" separator=" , ">
			#{item}
		</foreach>
		AND HIRE_DEL_FL='N'
	</select>
	
	
	<!-- 직종별 공고 조회해오기 -->
	<select id="kindHireList">
		SELECT A.SHOP_NAME, HIRE_TITLE, WORK_START,HIRE_NO,
		WORK_END, DOSI_NAME, SIGUNGU_NAME, F.PAY_NAME, PAY_INPUT
		 FROM "HIRE" A
		JOIN "SHOP" B ON (B.SHOP_NO=A.SHOP_NO)
		JOIN "DONG" C ON (C.DONG_NO=A.DONG_NO)
		JOIN "SIGUNGU" D ON (D.SIGUNGU_NO=C.SIGUNGU_NO)
		JOIN "DOSI" E ON (E.DOSI_NO=D.DOSI_NO)
		JOIN "PAY_TYPE" F ON (F.PAY_NO=A.PAY_NO)

		WHERE HIRE_STATUS = 0
		AND A.TYPE_NO IN 
		<foreach collection="list" item="item" open="(" close=")" separator=" , ">
			#{item}
		</foreach>
		AND HIRE_DEL_FL='N'
		ORDER BY HIRE_NO DESC
	</select>
	
	<insert id="hireApply">
		INSERT INTO "APPLY_HIRE"
		VALUES(#{memberNo}, #{hireNo}, #{resumeNo}, #{applyTitle}, #{applyContent},DEFAULT)
	</insert>
	
	<!-- 공고 수정 시 공고 내용 모두 얻어오기 -->
	<select id="allHire">
	SELECT A.HIRE_NO, A.SHOP_NO, A.TYPE_NO,A.PAY_NO,A.HIRE_TITLE, A.HIRE_CONTENT,TO_CHAR(A.HIRE_END,'YYYY-MM-DD') HIRE_END,
	A.HIRE_COUNT, A.HIRE_TERM, A.HIRE_GENDER,A.HIRE_STATUS,A.WORK_DAY,A.PAY_INPUT,A.DONG_NO,A.ADDRESS_DETAIL,A.WORK_START,
	A.WORK_END, A.SHOP_OWNER, A.SHOP_EMAIL, A.SHOP_TEL, A.SHOP_NAME, A.ROAD_ADDRESS, TYPE_NAME
	FROM "HIRE" A
	LEFT JOIN "WORK_TYPE" B ON (B.TYPE_NO = A.TYPE_NO)
	LEFT JOIN PAY_TYPE C ON (C.PAY_NO=A.PAY_NO)
	LEFT JOIN "DONG" D ON (D.DONG_NO=A.DONG_NO)
	LEFT JOIN "SIGUNGU" E ON (E.SIGUNGU_NO=D.SIGUNGU_NO)
	LEFT JOIN "DOSI" F ON (F.DOSI_NO=E.DOSI_NO)
	WHERE HIRE_NO = #{hireNo}
	</select>
	<!-- 
	<insert id="insertWrite" useGeneratedKeys="true" parameterType="Hire">
		<selectKey order="BEFORE" resultType="_int" keyProperty="hireNo">
		SELECT SEQ_HIRE_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO "HIRE" 
		VALUES(
		#{hireNo},#{shopNo},#{typeNo},
		#{payNo},#{hireTitle},#{hireContent},
		DEFAULT,TO_DATE(#{hireEnd}, 'YYYY-MM-DD'),#{hireCount},
		#{hireTerm},#{hireGender},
		<if test='hireStatus == null'>
		DEFAULT
		</if>
		<if test='hireStatus != null'>
		#{hireStatus}
		</if>
		,
		#{workDay},#{payInput},#{dongNo},
		#{addressDetail},#{workStart},#{workEnd},#{shopOwner}
		,#{shopEmail},#{shopTel},#{shopName},#{address}
				)
	</insert>
	
	
	
	
	
	 -->
	<select id="hireApplyCheck" resultType="_int">
		SELECT COUNT(*)
		FROM APPLY_HIRE
		WHERE MEMBER_NO = #{memberNo}
		AND HIRE_NO = #{hireNo}
	</select>
	
	<!-- 수정 화면 화면 처음 로딩 시의 시도 시군구 동이름 넣기 -->
	<select id="initLocation">
		SELECT DOSI_NAME, SIGUNGU_NAME, DONG_NAME
		FROM "DONG"
		JOIN "SIGUNGU" USING (SIGUNGU_NO)
		JOIN "DOSI" USING (DOSI_NO)
		WHERE DONG_NO = #{dongNo}
	
	</select>
	<!-- 
	<insert id="insertWrite" useGeneratedKeys="true" parameterType="Hire">
		<selectKey order="BEFORE" resultType="_int" keyProperty="hireNo">
		SELECT SEQ_HIRE_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO "HIRE" 
		VALUES(
		#{hireNo},#{shopNo},#{typeNo},
		#{payNo},#{hireTitle},#{hireContent},
		DEFAULT,TO_DATE(#{hireEnd}, 'YYYY-MM-DD'),#{hireCount},
		#{hireTerm},#{hireGender},
		<if test='hireStatus == null'>
		DEFAULT
		</if>
		<if test='hireStatus != null'>
		#{hireStatus}
		</if>
		,
		#{workDay},#{payInput},#{dongNo},
		#{addressDetail},#{workStart},#{workEnd},#{shopOwner}
		,#{shopEmail},#{shopTel},#{shopName},#{address}
				)
	</insert>
	
	 -->
	<!-- 공고 수정하기 -->
	<update id="hireUpdate">
		UPDATE "HIRE" SET
		HIRE_TITLE=#{hireTitle},
		TYPE_NO=#{typeNo},
		HIRE_COUNT = #{hireCount},
		HIRE_END = TO_DATE(#{hireEnd}, 'YYYY-MM-DD'),
		HIRE_CONTENT = #{hireContent},
		HIRE_TERM = #{hireTerm},
		WORK_DAY = #{workDay},
		WORK_START = #{workStart},
		WORK_END = #{workEnd},
		PAY_NO = #{payNo},
		<if test='dongNo != 0'>
		DONG_NO = #{dongNo},
		</if>
		
		PAY_INPUT = #{payInput},
		HIRE_GENDER = #{hireGender},
		ADDRESS_DETAIL = #{addressDetail},
		SHOP_NAME = #{shopName},
		SHOP_OWNER = #{shopOwner},
		SHOP_TEL = #{shopTel},
		SHOP_EMAIL = #{shopEmail},
		ROAD_ADDRESS = #{address},
		HIRE_STATUS = 0
		WHERE HIRE_NO = #{hireNo}
	</update>
	
	<!-- 모집 마감일과 현재 비교해서 모집마감/지원하기 보이기 -->
	<select id="hireOpen">
		SELECT COUNT(*) FROM "HIRE"
		WHERE SYSDATE > HIRE_END 
		AND HIRE_NO=#{hireNo}
	</select>
	
	<!-- 저장한 이력서 목록 얻어오기 -->
	<select id="resumeList">
	 	SELECT * FROM "RESUME"
	 	WHERE RESUME_STATUS = 0
	 	AND MEMBER_NO=#{memberNo}
	</select>
	

	<!-- 지원서 상세보기 -->
	<select id="hireApplyDetail" resultType="Hire">
		SELECT MEMBER_NO, HIRE_NO, RESUME_NO, APPLY_TITLE,
		APPLY_CONTENT, APPLY_DATE, h.SHOP_NAME, HIRE_TITLE,
		MEMBER_NAME, MEMBER_PHONE_NUMBER, MEMBER_EMAIL
		FROM "APPLY_HIRE"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "HIRE" h USING(HIRE_NO)
	    JOIN SHOP s ON h.SHOP_NO = s.SHOP_NO
		WHERE MEMBER_NO = #{memberNo}
		AND HIRE_NO = #{hireNo}
	</select>

	
	<!-- 공고 삭제 -->
	<delete id="hireDelete">
		UPDATE "HIRE" SET
		HIRE_DEL_FL='Y'
		WHERE HIRE_NO=#{hireNo}
	
	</delete>
	

	<select id="hireList" resultType="Hire">
		SELECT MEMBER_NO, HIRE_NO, MEMBER_NAME, MEMBER_EMAIL
		FROM "APPLY_HIRE"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "HIRE" h USING(HIRE_NO)
		WHERE HIRE_NO = #{hireNo}
	</select>

	<!-- 해당 기업이 작성한 공고 모두 얻어오기 -->
	<select id="myHireList">
		SELECT * FROM "HIRE"
		WHERE SHOP_NO = #{shopNo}
		AND HIRE_DEL_FL='N'
		ORDER BY HIRE_START DESC
	</select>

	<select id="memberCount" resultType="_int">
		SELECT COUNT(*)
		FROM "APPLY_HIRE"
		WHERE HIRE_NO = #{hireNo}
	</select>
</mapper>
